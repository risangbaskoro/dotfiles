#!/bin/bash

set -e

CURRENT_DIR=$(pwd)
DOTFILES_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"


# Detect and install a package using the right package manager
install_package() {
  local pkg="$1"

  echo "üîç Detecting package manager to install '$pkg'..."

  if [[ "$OSTYPE" == "darwin"* ]] && command -v brew &>/dev/null; then
    echo "üç∫ Installing $pkg via Homebrew..."
    brew install "$pkg"
  elif command -v pacman &>/dev/null; then
    echo "üèπ Installing $pkg via pacman..."
    sudo pacman -Sy --noconfirm "$pkg"
  elif command -v apk &>/dev/null; then
    echo "üêã Installing $pkg via apk..."
    sudo apk add "$pkg"
  elif command -v apt &>/dev/null; then
    echo "üßÉ Installing $pkg via apt..."
    sudo apt install -y "$pkg"
  elif command -v dnf &>/dev/null; then
    echo "üå∂ Installing $pkg via dnf..."
    sudo dnf install -y "$pkg"
  elif command -v zypper &>/dev/null; then
    echo "üßÄ Installing $pkg via zypper..."
    sudo zypper install -y "$pkg"
  elif command -v snap &>/dev/null; then
    echo "üì¶ Installing $pkg via snap..."
    sudo snap install "$pkg"
  else
    echo "‚ùå No supported package manager found. Please install '$pkg' manually."
    exit 1
  fi
}

# Dependency check with prompt
dependency() {
  if command -v "$1" &>/dev/null || pacman -Qi "$1" &>/dev/null; then
    return 0
  fi

  read -rp "‚ùì Dependency '$1' not found. Install it? [Y/n] " choice
  if [[ "${choice,,}" != "n" ]]; then
    install_package "$1"
  else
    echo "‚ö†Ô∏è Skipping '$1'. Script may not work as expected."
  fi
}

if command -v apt &>/dev/null; then
  echo "üßÉ Updating apt..."
  sudo apt update
fi

dependency "tree"
dependency "fzf"
dependency "stow"
dependency "git-delta"
dependency "neovim"
dependency "ripgrep"
dependency "gnupg"
dependency "clang"
dependency "cmake"
dependency "just"

is_stow_installed() {
  command -v stow >/dev/null 2>&1
}

main() {
  if is_stow_installed; then
    echo "‚úÖ GNU Stow is already installed."
  else
    dependency "stow"
    echo "‚úÖ GNU Stow has been installed."
  fi

  if is_stow_installed; then
    echo "üîó Symlinking files in $DOTFILES_DIR"
    echo "Running command:"
    echo
    echo "> cd $DOTFILES_DIR && stow . --target=$HOME && cd"
    cd "$DOTFILES_DIR" && stow . --target="$HOME" && cd
    echo
    echo "‚úÖ Done!"
  else
    echo "‚ùå GNU Stow is still not installed."
    exit 1
  fi

  exit 0
}

main
